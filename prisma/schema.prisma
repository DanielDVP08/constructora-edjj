// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  user
  member
  user_business
  member_business
}

model User{
  id String @id @default(cuid())
  username String @unique
  email String @unique
  password String?
  emailVerified DateTime?
  image String?
  role Role @default(user)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model VerficationToken{
  identifier String @unique
  token String
  expires DateTime

  @@id([identifier]) 
}

model Member{
  id String @id @default(cuid())
  profileimage String?
  firstName String 
  lastName String 
  documentid String @unique
  phoneNumber String?
  email String @unique
  education String?
  career String?
  university String?
  codcip String?
  yearsOfExperience String?
  skills String?
  description String?
  residence String?
  lastjob String?
  cv String?
  category String?
  isWorking Boolean @default(false)
  
  suscriptionactived DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Business{
  id String @id @default(cuid())
  useremail String @unique
  businessname String
  rucNumber String
  companyname String
  businessaddress String?
  department String?
  province String?
  description String?
  profileimage String?
  companylogo String?
  coverimage String?
  proforma String?
  whatsapp String?
  googlemaps String?

  suscriptionactived DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}

model VerficationPayment{
  identifier String @unique
  token String
  expires DateTime

  @@id([identifier]) 
}

